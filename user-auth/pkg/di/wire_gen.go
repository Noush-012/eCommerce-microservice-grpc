// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/Noush-012/project-ecommerce-microservice/user-auth-service/config"
	"github.com/Noush-012/project-ecommerce-microservice/user-auth-service/pkg/api"
	"github.com/Noush-012/project-ecommerce-microservice/user-auth-service/pkg/client"
	"github.com/Noush-012/project-ecommerce-microservice/user-auth-service/pkg/db"
	"github.com/Noush-012/project-ecommerce-microservice/user-auth-service/pkg/repository"
	"github.com/Noush-012/project-ecommerce-microservice/user-auth-service/pkg/service"
	"github.com/Noush-012/project-ecommerce-microservice/user-auth-service/pkg/usecase"
)

// Injectors from wire.go:

func InitiateAPI(cfg *config.Config) (*api.ServeServer, error) {
	gormDB, err := db.ConnToDB(cfg)
	if err != nil {
		return nil, err
	}
	authRepository := repository.NewAuthRepository(gormDB)
	userClient, err := client.NewUserServiceClient(cfg)
	if err != nil {
		return nil, err
	}
	authService := usecase.NewAuthUseCase(authRepository, userClient)
	authServiceServer := service.NewAuthServiceServer(authService)
	serveServer, err := api.NewGRPCServer(cfg, authServiceServer)
	if err != nil {
		return nil, err
	}
	return serveServer, nil
}
